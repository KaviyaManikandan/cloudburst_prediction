name: deploy

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["Terraform Apply"]
    types:
      - completed

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET }}
          aws-region: us-east-1
          

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: docker build -t app-repoo .

      - name: Tag Docker image
        run: docker tag app-repoo:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/app-repoo:latest

      - name: Push Docker image to Amazon ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/app-repoo:latest

        name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform Configuration
        run: terraform validate

      - name: Plan Deployment
        run: terraform plan -out=tfplan

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_aws_access_key: ${{ secrets.ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.SECRET }}
          TF_VAR_aws_region: "us-east-1"

 
